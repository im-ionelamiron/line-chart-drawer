{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/query-string/index.js","webpack:///./node_modules/strict-uri-encode/index.js","webpack:///./node_modules/decode-uri-component/index.js","webpack:///./node_modules/d3/dist/package.js","webpack:///./node_modules/d3-array/src/ascending.js","webpack:///./node_modules/d3-array/src/bisector.js","webpack:///./node_modules/d3-array/src/bisect.js","webpack:///./node_modules/d3-array/src/pairs.js","webpack:///./node_modules/d3-array/src/cross.js","webpack:///./node_modules/d3-array/src/descending.js","webpack:///./node_modules/d3-array/src/number.js","webpack:///./node_modules/d3-array/src/variance.js","webpack:///./node_modules/d3-array/src/deviation.js","webpack:///./node_modules/d3-array/src/extent.js","webpack:///./node_modules/d3-array/src/array.js","webpack:///./node_modules/d3-array/src/constant.js","webpack:///./node_modules/d3-array/src/identity.js","webpack:///./node_modules/d3-array/src/range.js","webpack:///./node_modules/d3-array/src/ticks.js","webpack:///./node_modules/d3-array/src/threshold/sturges.js","webpack:///./node_modules/d3-array/src/histogram.js","webpack:///./node_modules/d3-array/src/quantile.js","webpack:///./node_modules/d3-array/src/threshold/freedmanDiaconis.js","webpack:///./node_modules/d3-array/src/threshold/scott.js","webpack:///./node_modules/d3-array/src/max.js","webpack:///./node_modules/d3-array/src/mean.js","webpack:///./node_modules/d3-array/src/median.js","webpack:///./node_modules/d3-array/src/merge.js","webpack:///./node_modules/d3-array/src/min.js","webpack:///./node_modules/d3-array/src/permute.js","webpack:///./node_modules/d3-array/src/scan.js","webpack:///./node_modules/d3-array/src/shuffle.js","webpack:///./node_modules/d3-array/src/sum.js","webpack:///./node_modules/d3-array/src/transpose.js","webpack:///./node_modules/d3-array/src/zip.js","webpack:///./node_modules/d3-axis/src/array.js","webpack:///./node_modules/d3-axis/src/identity.js","webpack:///./node_modules/d3-axis/src/axis.js","webpack:///./node_modules/d3-dispatch/src/dispatch.js","webpack:///./node_modules/d3-selection/src/namespaces.js","webpack:///./node_modules/d3-selection/src/namespace.js","webpack:///./node_modules/d3-selection/src/creator.js","webpack:///./node_modules/d3-selection/src/selector.js","webpack:///./node_modules/d3-selection/src/selection/select.js","webpack:///./node_modules/d3-selection/src/selectorAll.js","webpack:///./node_modules/d3-selection/src/selection/selectAll.js","webpack:///./node_modules/d3-selection/src/matcher.js","webpack:///./node_modules/d3-selection/src/selection/filter.js","webpack:///./node_modules/d3-selection/src/selection/sparse.js","webpack:///./node_modules/d3-selection/src/selection/enter.js","webpack:///./node_modules/d3-selection/src/constant.js","webpack:///./node_modules/d3-selection/src/selection/data.js","webpack:///./node_modules/d3-selection/src/selection/exit.js","webpack:///./node_modules/d3-selection/src/selection/merge.js","webpack:///./node_modules/d3-selection/src/selection/order.js","webpack:///./node_modules/d3-selection/src/selection/sort.js","webpack:///./node_modules/d3-selection/src/selection/call.js","webpack:///./node_modules/d3-selection/src/selection/nodes.js","webpack:///./node_modules/d3-selection/src/selection/node.js","webpack:///./node_modules/d3-selection/src/selection/size.js","webpack:///./node_modules/d3-selection/src/selection/empty.js","webpack:///./node_modules/d3-selection/src/selection/each.js","webpack:///./node_modules/d3-selection/src/selection/attr.js","webpack:///./node_modules/d3-selection/src/window.js","webpack:///./node_modules/d3-selection/src/selection/style.js","webpack:///./node_modules/d3-selection/src/selection/property.js","webpack:///./node_modules/d3-selection/src/selection/classed.js","webpack:///./node_modules/d3-selection/src/selection/text.js","webpack:///./node_modules/d3-selection/src/selection/html.js","webpack:///./node_modules/d3-selection/src/selection/raise.js","webpack:///./node_modules/d3-selection/src/selection/lower.js","webpack:///./node_modules/d3-selection/src/selection/append.js","webpack:///./node_modules/d3-selection/src/selection/insert.js","webpack:///./node_modules/d3-selection/src/selection/remove.js","webpack:///./node_modules/d3-selection/src/selection/clone.js","webpack:///./node_modules/d3-selection/src/selection/datum.js","webpack:///./node_modules/d3-selection/src/selection/on.js","webpack:///./node_modules/d3-selection/src/selection/dispatch.js","webpack:///./node_modules/d3-selection/src/selection/index.js","webpack:///./node_modules/d3-selection/src/select.js","webpack:///./node_modules/d3-selection/src/create.js","webpack:///./node_modules/d3-selection/src/local.js","webpack:///./node_modules/d3-selection/src/sourceEvent.js","webpack:///./node_modules/d3-selection/src/point.js","webpack:///./node_modules/d3-selection/src/mouse.js","webpack:///./node_modules/d3-selection/src/selectAll.js","webpack:///./node_modules/d3-selection/src/touch.js","webpack:///./node_modules/d3-selection/src/touches.js","webpack:///./node_modules/d3-drag/src/noevent.js","webpack:///./node_modules/d3-drag/src/nodrag.js","webpack:///./node_modules/d3-drag/src/constant.js","webpack:///./node_modules/d3-drag/src/event.js","webpack:///./node_modules/d3-drag/src/drag.js","webpack:///./node_modules/d3-color/src/define.js","webpack:///./node_modules/d3-color/src/color.js","webpack:///./node_modules/d3-color/src/math.js","webpack:///./node_modules/d3-color/src/lab.js","webpack:///./node_modules/d3-color/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/basis.js","webpack:///./node_modules/d3-interpolate/src/basisClosed.js","webpack:///./node_modules/d3-interpolate/src/constant.js","webpack:///./node_modules/d3-interpolate/src/color.js","webpack:///./node_modules/d3-interpolate/src/rgb.js","webpack:///./node_modules/d3-interpolate/src/array.js","webpack:///./node_modules/d3-interpolate/src/date.js","webpack:///./node_modules/d3-interpolate/src/number.js","webpack:///./node_modules/d3-interpolate/src/object.js","webpack:///./node_modules/d3-interpolate/src/string.js","webpack:///./node_modules/d3-interpolate/src/value.js","webpack:///./node_modules/d3-interpolate/src/discrete.js","webpack:///./node_modules/d3-interpolate/src/hue.js","webpack:///./node_modules/d3-interpolate/src/round.js","webpack:///./node_modules/d3-interpolate/src/transform/decompose.js","webpack:///./node_modules/d3-interpolate/src/transform/parse.js","webpack:///./node_modules/d3-interpolate/src/transform/index.js","webpack:///./node_modules/d3-interpolate/src/zoom.js","webpack:///./node_modules/d3-interpolate/src/hsl.js","webpack:///./node_modules/d3-interpolate/src/lab.js","webpack:///./node_modules/d3-interpolate/src/hcl.js","webpack:///./node_modules/d3-interpolate/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/piecewise.js","webpack:///./node_modules/d3-interpolate/src/quantize.js","webpack:///./node_modules/d3-timer/src/timer.js","webpack:///./node_modules/d3-timer/src/timeout.js","webpack:///./node_modules/d3-timer/src/interval.js","webpack:///./node_modules/d3-transition/src/transition/schedule.js","webpack:///./node_modules/d3-transition/src/interrupt.js","webpack:///./node_modules/d3-transition/src/selection/interrupt.js","webpack:///./node_modules/d3-transition/src/transition/tween.js","webpack:///./node_modules/d3-transition/src/transition/interpolate.js","webpack:///./node_modules/d3-transition/src/transition/attr.js","webpack:///./node_modules/d3-transition/src/transition/attrTween.js","webpack:///./node_modules/d3-transition/src/transition/delay.js","webpack:///./node_modules/d3-transition/src/transition/duration.js","webpack:///./node_modules/d3-transition/src/transition/ease.js","webpack:///./node_modules/d3-transition/src/transition/filter.js","webpack:///./node_modules/d3-transition/src/transition/merge.js","webpack:///./node_modules/d3-transition/src/transition/on.js","webpack:///./node_modules/d3-transition/src/transition/remove.js","webpack:///./node_modules/d3-transition/src/transition/select.js","webpack:///./node_modules/d3-transition/src/transition/selectAll.js","webpack:///./node_modules/d3-transition/src/transition/selection.js","webpack:///./node_modules/d3-transition/src/transition/style.js","webpack:///./node_modules/d3-transition/src/transition/styleTween.js","webpack:///./node_modules/d3-transition/src/transition/text.js","webpack:///./node_modules/d3-transition/src/transition/transition.js","webpack:///./node_modules/d3-transition/src/transition/index.js","webpack:///./node_modules/d3-ease/src/linear.js","webpack:///./node_modules/d3-ease/src/quad.js","webpack:///./node_modules/d3-ease/src/cubic.js","webpack:///./node_modules/d3-ease/src/poly.js","webpack:///./node_modules/d3-ease/src/sin.js","webpack:///./node_modules/d3-ease/src/exp.js","webpack:///./node_modules/d3-ease/src/circle.js","webpack:///./node_modules/d3-ease/src/bounce.js","webpack:///./node_modules/d3-ease/src/back.js","webpack:///./node_modules/d3-ease/src/elastic.js","webpack:///./node_modules/d3-transition/src/selection/transition.js","webpack:///./node_modules/d3-transition/src/selection/index.js","webpack:///./node_modules/d3-transition/src/active.js","webpack:///./node_modules/d3-brush/src/constant.js","webpack:///./node_modules/d3-brush/src/event.js","webpack:///./node_modules/d3-brush/src/noevent.js","webpack:///./node_modules/d3-brush/src/brush.js","webpack:///./node_modules/d3-chord/src/math.js","webpack:///./node_modules/d3-chord/src/chord.js","webpack:///./node_modules/d3-chord/src/array.js","webpack:///./node_modules/d3-chord/src/constant.js","webpack:///./node_modules/d3-path/src/path.js","webpack:///./node_modules/d3-chord/src/ribbon.js","webpack:///./node_modules/d3-collection/src/map.js","webpack:///./node_modules/d3-collection/src/nest.js","webpack:///./node_modules/d3-collection/src/set.js","webpack:///./node_modules/d3-collection/src/keys.js","webpack:///./node_modules/d3-collection/src/values.js","webpack:///./node_modules/d3-collection/src/entries.js","webpack:///./node_modules/d3-contour/src/array.js","webpack:///./node_modules/d3-contour/src/ascending.js","webpack:///./node_modules/d3-contour/src/area.js","webpack:///./node_modules/d3-contour/src/constant.js","webpack:///./node_modules/d3-contour/src/contains.js","webpack:///./node_modules/d3-contour/src/noop.js","webpack:///./node_modules/d3-contour/src/contours.js","webpack:///./node_modules/d3-contour/src/blur.js","webpack:///./node_modules/d3-contour/src/density.js","webpack:///./node_modules/d3-dsv/src/dsv.js","webpack:///./node_modules/d3-dsv/src/csv.js","webpack:///./node_modules/d3-dsv/src/tsv.js","webpack:///./node_modules/d3-fetch/src/blob.js","webpack:///./node_modules/d3-fetch/src/buffer.js","webpack:///./node_modules/d3-fetch/src/text.js","webpack:///./node_modules/d3-fetch/src/dsv.js","webpack:///./node_modules/d3-fetch/src/image.js","webpack:///./node_modules/d3-fetch/src/json.js","webpack:///./node_modules/d3-fetch/src/xml.js","webpack:///./node_modules/d3-force/src/center.js","webpack:///./node_modules/d3-force/src/constant.js","webpack:///./node_modules/d3-force/src/jiggle.js","webpack:///./node_modules/d3-quadtree/src/add.js","webpack:///./node_modules/d3-quadtree/src/cover.js","webpack:///./node_modules/d3-quadtree/src/data.js","webpack:///./node_modules/d3-quadtree/src/extent.js","webpack:///./node_modules/d3-quadtree/src/quad.js","webpack:///./node_modules/d3-quadtree/src/find.js","webpack:///./node_modules/d3-quadtree/src/remove.js","webpack:///./node_modules/d3-quadtree/src/root.js","webpack:///./node_modules/d3-quadtree/src/size.js","webpack:///./node_modules/d3-quadtree/src/visit.js","webpack:///./node_modules/d3-quadtree/src/visitAfter.js","webpack:///./node_modules/d3-quadtree/src/x.js","webpack:///./node_modules/d3-quadtree/src/y.js","webpack:///./node_modules/d3-quadtree/src/quadtree.js","webpack:///./node_modules/d3-force/src/collide.js","webpack:///./node_modules/d3-force/src/link.js","webpack:///./node_modules/d3-force/src/simulation.js","webpack:///./node_modules/d3-force/src/manyBody.js","webpack:///./node_modules/d3-force/src/radial.js","webpack:///./node_modules/d3-force/src/x.js","webpack:///./node_modules/d3-force/src/y.js","webpack:///./node_modules/d3-format/src/formatDecimal.js","webpack:///./node_modules/d3-format/src/exponent.js","webpack:///./node_modules/d3-format/src/formatGroup.js","webpack:///./node_modules/d3-format/src/formatNumerals.js","webpack:///./node_modules/d3-format/src/formatSpecifier.js","webpack:///./node_modules/d3-format/src/formatTrim.js","webpack:///./node_modules/d3-format/src/formatPrefixAuto.js","webpack:///./node_modules/d3-format/src/formatRounded.js","webpack:///./node_modules/d3-format/src/formatTypes.js","webpack:///./node_modules/d3-format/src/identity.js","webpack:///./node_modules/d3-format/src/locale.js","webpack:///./node_modules/d3-format/src/defaultLocale.js","webpack:///./node_modules/d3-format/src/precisionFixed.js","webpack:///./node_modules/d3-format/src/precisionPrefix.js","webpack:///./node_modules/d3-format/src/precisionRound.js","webpack:///./node_modules/d3-geo/src/adder.js","webpack:///./node_modules/d3-geo/src/math.js","webpack:///./node_modules/d3-geo/src/noop.js","webpack:///./node_modules/d3-geo/src/stream.js","webpack:///./node_modules/d3-geo/src/area.js","webpack:///./node_modules/d3-geo/src/cartesian.js","webpack:///./node_modules/d3-geo/src/bounds.js","webpack:///./node_modules/d3-geo/src/centroid.js","webpack:///./node_modules/d3-geo/src/constant.js","webpack:///./node_modules/d3-geo/src/compose.js","webpack:///./node_modules/d3-geo/src/rotation.js","webpack:///./node_modules/d3-geo/src/circle.js","webpack:///./node_modules/d3-geo/src/clip/buffer.js","webpack:///./node_modules/d3-geo/src/pointEqual.js","webpack:///./node_modules/d3-geo/src/clip/rejoin.js","webpack:///./node_modules/d3-geo/src/polygonContains.js","webpack:///./node_modules/d3-geo/src/clip/index.js","webpack:///./node_modules/d3-geo/src/clip/antimeridian.js","webpack:///./node_modules/d3-geo/src/clip/circle.js","webpack:///./node_modules/d3-geo/src/clip/line.js","webpack:///./node_modules/d3-geo/src/clip/rectangle.js","webpack:///./node_modules/d3-geo/src/clip/extent.js","webpack:///./node_modules/d3-geo/src/length.js","webpack:///./node_modules/d3-geo/src/distance.js","webpack:///./node_modules/d3-geo/src/contains.js","webpack:///./node_modules/d3-geo/src/graticule.js","webpack:///./node_modules/d3-geo/src/interpolate.js","webpack:///./node_modules/d3-geo/src/identity.js","webpack:///./node_modules/d3-geo/src/path/area.js","webpack:///./node_modules/d3-geo/src/path/bounds.js","webpack:///./node_modules/d3-geo/src/path/centroid.js","webpack:///./node_modules/d3-geo/src/path/context.js","webpack:///./node_modules/d3-geo/src/path/measure.js","webpack:///./node_modules/d3-geo/src/path/string.js","webpack:///./node_modules/d3-geo/src/path/index.js","webpack:///./node_modules/d3-geo/src/transform.js","webpack:///./node_modules/d3-geo/src/projection/fit.js","webpack:///./node_modules/d3-geo/src/projection/resample.js","webpack:///./node_modules/d3-geo/src/projection/index.js","webpack:///./node_modules/d3-geo/src/projection/conic.js","webpack:///./node_modules/d3-geo/src/projection/cylindricalEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/conicEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/albers.js","webpack:///./node_modules/d3-geo/src/projection/albersUsa.js","webpack:///./node_modules/d3-geo/src/projection/azimuthal.js","webpack:///./node_modules/d3-geo/src/projection/azimuthalEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/azimuthalEquidistant.js","webpack:///./node_modules/d3-geo/src/projection/mercator.js","webpack:///./node_modules/d3-geo/src/projection/conicConformal.js","webpack:///./node_modules/d3-geo/src/projection/equirectangular.js","webpack:///./node_modules/d3-geo/src/projection/conicEquidistant.js","webpack:///./node_modules/d3-geo/src/projection/equalEarth.js","webpack:///./node_modules/d3-geo/src/projection/gnomonic.js","webpack:///./node_modules/d3-geo/src/projection/identity.js","webpack:///./node_modules/d3-geo/src/projection/naturalEarth1.js","webpack:///./node_modules/d3-geo/src/projection/orthographic.js","webpack:///./node_modules/d3-geo/src/projection/stereographic.js","webpack:///./node_modules/d3-geo/src/projection/transverseMercator.js","webpack:///./node_modules/d3-hierarchy/src/cluster.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/count.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/each.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/sum.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/sort.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/path.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/ancestors.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/descendants.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/leaves.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/links.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/index.js","webpack:///./node_modules/d3-hierarchy/src/array.js","webpack:///./node_modules/d3-hierarchy/src/pack/enclose.js","webpack:///./node_modules/d3-hierarchy/src/pack/siblings.js","webpack:///./node_modules/d3-hierarchy/src/accessors.js","webpack:///./node_modules/d3-hierarchy/src/constant.js","webpack:///./node_modules/d3-hierarchy/src/pack/index.js","webpack:///./node_modules/d3-hierarchy/src/treemap/round.js","webpack:///./node_modules/d3-hierarchy/src/treemap/dice.js","webpack:///./node_modules/d3-hierarchy/src/partition.js","webpack:///./node_modules/d3-hierarchy/src/stratify.js","webpack:///./node_modules/d3-hierarchy/src/tree.js","webpack:///./node_modules/d3-hierarchy/src/treemap/slice.js","webpack:///./node_modules/d3-hierarchy/src/treemap/squarify.js","webpack:///./node_modules/d3-hierarchy/src/treemap/index.js","webpack:///./node_modules/d3-hierarchy/src/treemap/binary.js","webpack:///./node_modules/d3-hierarchy/src/treemap/sliceDice.js","webpack:///./node_modules/d3-hierarchy/src/treemap/resquarify.js","webpack:///./node_modules/d3-polygon/src/area.js","webpack:///./node_modules/d3-polygon/src/centroid.js","webpack:///./node_modules/d3-polygon/src/cross.js","webpack:///./node_modules/d3-polygon/src/hull.js","webpack:///./node_modules/d3-polygon/src/contains.js","webpack:///./node_modules/d3-polygon/src/length.js","webpack:///./node_modules/d3-random/src/defaultSource.js","webpack:///./node_modules/d3-random/src/uniform.js","webpack:///./node_modules/d3-random/src/normal.js","webpack:///./node_modules/d3-random/src/logNormal.js","webpack:///./node_modules/d3-random/src/irwinHall.js","webpack:///./node_modules/d3-random/src/bates.js","webpack:///./node_modules/d3-random/src/exponential.js","webpack:///./node_modules/d3-scale/src/array.js","webpack:///./node_modules/d3-scale/src/ordinal.js","webpack:///./node_modules/d3-scale/src/band.js","webpack:///./node_modules/d3-scale/src/constant.js","webpack:///./node_modules/d3-scale/src/number.js","webpack:///./node_modules/d3-scale/src/continuous.js","webpack:///./node_modules/d3-scale/src/tickFormat.js","webpack:///./node_modules/d3-scale/src/linear.js","webpack:///./node_modules/d3-scale/src/identity.js","webpack:///./node_modules/d3-scale/src/nice.js","webpack:///./node_modules/d3-scale/src/log.js","webpack:///./node_modules/d3-scale/src/pow.js","webpack:///./node_modules/d3-scale/src/quantile.js","webpack:///./node_modules/d3-scale/src/quantize.js","webpack:///./node_modules/d3-scale/src/threshold.js","webpack:///./node_modules/d3-time/src/interval.js","webpack:///./node_modules/d3-time/src/millisecond.js","webpack:///./node_modules/d3-time/src/duration.js","webpack:///./node_modules/d3-time/src/second.js","webpack:///./node_modules/d3-time/src/minute.js","webpack:///./node_modules/d3-time/src/hour.js","webpack:///./node_modules/d3-time/src/day.js","webpack:///./node_modules/d3-time/src/week.js","webpack:///./node_modules/d3-time/src/month.js","webpack:///./node_modules/d3-time/src/year.js","webpack:///./node_modules/d3-time/src/utcMinute.js","webpack:///./node_modules/d3-time/src/utcHour.js","webpack:///./node_modules/d3-time/src/utcDay.js","webpack:///./node_modules/d3-time/src/utcWeek.js","webpack:///./node_modules/d3-time/src/utcMonth.js","webpack:///./node_modules/d3-time/src/utcYear.js","webpack:///./node_modules/d3-time-format/src/locale.js","webpack:///./node_modules/d3-time-format/src/defaultLocale.js","webpack:///./node_modules/d3-time-format/src/isoFormat.js","webpack:///./node_modules/d3-time-format/src/isoParse.js","webpack:///./node_modules/d3-scale/src/time.js","webpack:///./node_modules/d3-scale/src/utcTime.js","webpack:///./node_modules/d3-scale/src/sequential.js","webpack:///./node_modules/d3-scale/src/diverging.js","webpack:///./node_modules/d3-scale-chromatic/src/colors.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack:///./node_modules/d3-scale-chromatic/src/ramp.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack:///./node_modules/d3-shape/src/constant.js","webpack:///./node_modules/d3-shape/src/math.js","webpack:///./node_modules/d3-shape/src/arc.js","webpack:///./node_modules/d3-shape/src/curve/linear.js","webpack:///./node_modules/d3-shape/src/point.js","webpack:///./node_modules/d3-shape/src/line.js","webpack:///./node_modules/d3-shape/src/area.js","webpack:///./node_modules/d3-shape/src/descending.js","webpack:///./node_modules/d3-shape/src/identity.js","webpack:///./node_modules/d3-shape/src/pie.js","webpack:///./node_modules/d3-shape/src/curve/radial.js","webpack:///./node_modules/d3-shape/src/lineRadial.js","webpack:///./node_modules/d3-shape/src/areaRadial.js","webpack:///./node_modules/d3-shape/src/pointRadial.js","webpack:///./node_modules/d3-shape/src/array.js","webpack:///./node_modules/d3-shape/src/link/index.js","webpack:///./node_modules/d3-shape/src/symbol/circle.js","webpack:///./node_modules/d3-shape/src/symbol/cross.js","webpack:///./node_modules/d3-shape/src/symbol/diamond.js","webpack:///./node_modules/d3-shape/src/symbol/star.js","webpack:///./node_modules/d3-shape/src/symbol/square.js","webpack:///./node_modules/d3-shape/src/symbol/triangle.js","webpack:///./node_modules/d3-shape/src/symbol/wye.js","webpack:///./node_modules/d3-shape/src/symbol.js","webpack:///./node_modules/d3-shape/src/noop.js","webpack:///./node_modules/d3-shape/src/curve/basis.js","webpack:///./node_modules/d3-shape/src/curve/basisClosed.js","webpack:///./node_modules/d3-shape/src/curve/basisOpen.js","webpack:///./node_modules/d3-shape/src/curve/bundle.js","webpack:///./node_modules/d3-shape/src/curve/cardinal.js","webpack:///./node_modules/d3-shape/src/curve/cardinalClosed.js","webpack:///./node_modules/d3-shape/src/curve/cardinalOpen.js","webpack:///./node_modules/d3-shape/src/curve/catmullRom.js","webpack:///./node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack:///./node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack:///./node_modules/d3-shape/src/curve/linearClosed.js","webpack:///./node_modules/d3-shape/src/curve/monotone.js","webpack:///./node_modules/d3-shape/src/curve/natural.js","webpack:///./node_modules/d3-shape/src/curve/step.js","webpack:///./node_modules/d3-shape/src/offset/none.js","webpack:///./node_modules/d3-shape/src/order/none.js","webpack:///./node_modules/d3-shape/src/stack.js","webpack:///./node_modules/d3-shape/src/offset/expand.js","webpack:///./node_modules/d3-shape/src/offset/diverging.js","webpack:///./node_modules/d3-shape/src/offset/silhouette.js","webpack:///./node_modules/d3-shape/src/offset/wiggle.js","webpack:///./node_modules/d3-shape/src/order/ascending.js","webpack:///./node_modules/d3-shape/src/order/descending.js","webpack:///./node_modules/d3-shape/src/order/insideOut.js","webpack:///./node_modules/d3-shape/src/order/reverse.js","webpack:///./node_modules/d3-voronoi/src/constant.js","webpack:///./node_modules/d3-voronoi/src/point.js","webpack:///./node_modules/d3-voronoi/src/RedBlackTree.js","webpack:///./node_modules/d3-voronoi/src/Edge.js","webpack:///./node_modules/d3-voronoi/src/Cell.js","webpack:///./node_modules/d3-voronoi/src/Circle.js","webpack:///./node_modules/d3-voronoi/src/Beach.js","webpack:///./node_modules/d3-voronoi/src/Diagram.js","webpack:///./node_modules/d3-voronoi/src/voronoi.js","webpack:///./node_modules/d3-zoom/src/constant.js","webpack:///./node_modules/d3-zoom/src/event.js","webpack:///./node_modules/d3-zoom/src/transform.js","webpack:///./node_modules/d3-zoom/src/noevent.js","webpack:///./node_modules/d3-zoom/src/zoom.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","strictUriEncode","decodeComponent","encoderForArrayFormat","options","arrayFormat","index","encode","join","parserForArrayFormat","result","accumulator","exec","replace","undefined","concat","strict","encodeURIComponent","decode","keysSorter","input","Array","isArray","sort","keys","a","b","Number","map","extract","queryStart","indexOf","slice","parse","assign","formatter","ret","trim","param","split","reduce","Boolean","stringify","obj","value2","push","length","filter","x","parseUrl","hashStart","url","query","str","charCodeAt","toString","toUpperCase","token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","decodeURIComponent","err","left","right","tokens","match","customDecodeURIComponent","replaceMap","%FE%FF","%FF%FE","entries","encodedURI","TypeError","package_name","version","description","keywords","homepage","license","author","main","unpkg","jsdelivr","package_module","repository","type","scripts","pretest","test","prepublishOnly","postpublish","devDependencies","json2module","rimraf","rollup","rollup-plugin-ascii","rollup-plugin-node-resolve","rollup-plugin-terser","tape","dependencies","d3-array","d3-axis","d3-brush","d3-chord","d3-collection","d3-color","d3-contour","d3-dispatch","d3-drag","d3-dsv","d3-ease","d3-fetch","d3-force","d3-format","d3-geo","d3-hierarchy","d3-interpolate","d3-path","d3-polygon","d3-quadtree","d3-random","d3-scale","d3-scale-chromatic","d3-selection","d3-shape","d3-time","d3-time-format","d3-timer","d3-transition","d3-voronoi","d3-zoom","ascending","NaN","bisector","compare","ascendingComparator","lo","hi","mid","f","ascendingBisect","bisectRight","bisectLeft","bisect","pairs","array","pair","cross","values0","values1","n0","n1","values","i0","i1","value0","descending","number","variance","valueof","mean","delta","sum","isNaN","deviation","v","Math","sqrt","src_extent","min","max","array_array","constant","identity","src_range","start","stop","step","arguments","ceil","range","e10","e5","e2","ticks","count","reverse","tickIncrement","isFinite","floor","power","log","LN10","error","pow","tickStep","step0","abs","step1","sturges","LN2","src_histogram","domain","threshold","histogram","data","xz","x0","x1","tz","shift","pop","bins","bin","_","thresholds","quantile","value1","freedmanDiaconis","scott","src_max","src_mean","median","numbers","src_merge","arrays","j","merged","src_min","permute","indexes","permutes","scan","xi","xj","shuffle","random","src_sum","src_transpose","matrix","transpose_length","transpose","row","zip","array_slice","src_identity","axis_top","axis_right","axis_bottom","axis_left","epsilon","translateX","translateY","y","axis_number","scale","axis_center","offset","bandwidth","round","entering","this","__axis","axis_axis","orient","tickArguments","tickValues","tickFormat","tickSizeInner","tickSizeOuter","tickPadding","k","transform","axis","context","apply","format","spacing","range0","range1","position","copy","selection","path","selectAll","tick","order","tickExit","exit","tickEnter","enter","append","attr","line","select","text","merge","insert","transition","getAttribute","parentNode","remove","each","tickSize","axisTop","axisRight","axisBottom","axisLeft","noop","dispatch","Error","Dispatch","parseTypenames","typenames","types","constructor","on","typename","callback","T","set","that","args","src_dispatch","xhtml","namespaces","svg","xlink","xml","xmlns","namespace","prefix","space","local","creatorInherit","document","ownerDocument","uri","namespaceURI","documentElement","createElement","createElementNS","creatorFixed","fullname","creator","none","src_selector","selector","querySelector","selection_select","groups","_groups","subgroups","group","subgroup","node","subnode","__data__","Selection","_parents","selectorAll_empty","selectorAll","querySelectorAll","parents","matcher","matches","matcher_element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","src_matcher","selection_filter","sparse","update","selection_enter","_enter","EnterNode","parent","datum","_next","_parent","appendChild","child","insertBefore","next","src_constant","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","keyValue","selection_data","size","enterGroup","updateGroup","exitGroup","previous","_exit","selection_exit","selection_merge","groups0","groups1","m0","m1","merges","group0","group1","selection_order","nextSibling","selection_sort","sort_ascending","compareNode","sortgroups","sortgroup","selection_nodes","nodes","selection_node","selection_size","selection_empty","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","getAttributeNS","src_window","defaultView","styleRemove","style","removeProperty","styleConstant","priority","setProperty","styleFunction","styleValue","getPropertyValue","getComputedStyle","propertyRemove","propertyConstant","propertyFunction","classArray","string","classList","ClassList","_node","_names","add","splice","contains","classedAdd","names","list","classedRemove","classedTrue","classedFalse","classedFunction","classed","textRemove","textContent","textConstant","textFunction","selection_text","htmlRemove","innerHTML","htmlConstant","htmlFunction","html","raise","selection_raise","lower","previousSibling","firstChild","selection_lower","constantNull","before","removeChild","selection_remove","selection_cloneShallow","cloneNode","selection_cloneDeep","clone","deep","filterEvents","on_event","on_element","mouseenter","mouseleave","filterContextListener","listener","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","on_parseTypenames","onRemove","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","selection_dispatch","selection_root","selection_selection","empty","src_selection","src_select","src_create","nextId","Local","id","current","source","src_point","ownerSVGElement","createSVGPoint","point","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","top","clientTop","mouse","changedTouches","src_selectAll","src_touch","touches","identifier","touch","src_touches","points","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","root","__noselect","MozUserSelect","yesdrag","noclick","setTimeout","d3_drag_src_constant","DragEvent","target","subject","active","dx","dy","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","container","touchable","gestures","listeners","mousedownx","mousedowny","mousemoving","touchending","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","clearTimeout","sublisteners","p0","clickDistance","define","factory","extend","definition","Color","darker","brighter","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_color","displayable","rgb","hex","toLowerCase","parseInt","Rgb","rgbn","rgba","hsla","g","rgbConvert","opacity","color_rgb","h","Hsl","hslConvert","hsl","m2","hsl2rgb","deg2rad","PI","rad2deg","K","Xn","Yn","Zn","lab_t0","lab_t1","lab_t2","t3","labConvert","Lab","Hcl","cos","sin","rgb2lrgb","xyz2lab","z","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","lch","hcl","cubehelix_A","cubehelix_B","C","cubehelix_D","cubehelix_E","ED","EB","BC_DA","cubehelixConvert","Cubehelix","bl","cubehelix_cubehelix","cosh","sinh","basis","t1","v0","v1","v2","v3","t2","src_basis","basisClosed","d3_interpolate_src_constant","linear","exponential","color_hue","gamma","nogamma","src_rgb","rgbGamma","color","end","rgbSpline","spline","colors","rgbBasis","rgbBasisClosed","src_array","nb","na","src_value","src_date","Date","setTime","src_number","src_object","reA","reB","string_zero","one","src_string","bi","lastIndex","am","bm","bs","q","valueOf","discrete","src_hue","src_round","degrees","decompose_identity","rotate","skewX","scaleX","scaleY","decompose","e","atan","cssNode","cssRoot","cssView","svgNode","parseCss","parseSvg","baseVal","consolidate","interpolateTransform","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","zoom_cosh","exp","zoom_sinh","tanh","src_zoom","p1","ux0","uy0","w0","ux1","uy1","w1","d2","S","d1","b0","b1","r0","r1","coshr0","u","duration","hsl_hsl","hue","src_hsl","hslLong","lab_lab","hcl_hcl","src_hcl","hclLong","src_cubehelix_cubehelix","cubehelixGamma","cubehelix","src_cubehelix","cubehelixLong","piecewise_piecewise","interpolate","I","quantize","interpolator","samples","timer_frame","timeout","timer_interval","pokeDelay","taskHead","taskTail","clockLast","clockNow","clockSkew","clock","performance","now","setFrame","requestAnimationFrame","clearNow","Timer","_call","_time","timer","restart","delay","time","sleep","Infinity","timerFlush","wake","nap","poke","t0","clearInterval","setInterval","src_timeout","elapsed","src_interval","total","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","schedule_create","tween","ease","state","schedule_init","schedule","schedule_get","schedule_set","self","interrupt","selection_interrupt","tweenRemove","tween0","tween1","tweenFunction","transition_tween","_id","tweenValue","transition_interpolate","attr_attrRemove","attr_attrRemoveNS","attr_attrConstant","value00","interpolate0","attr_attrConstantNS","attr_attrFunction","value10","attr_attrFunctionNS","transition_attr","attrTween","attrTweenNS","_value","transition_attrTween","delayFunction","delayConstant","transition_delay","durationFunction","durationConstant","transition_duration","easeConstant","transition_filter","Transition","_name","transition_merge","on_start","every","onFunction","on0","on1","sit","transition_on","removeFunction","transition_remove","transition_select","transition_selectAll","children","inherit","selection_Selection","transition_selection","style_styleRemove","styleRemoveEnd","style_styleConstant","style_styleFunction","transition_style","styleTween","transition_styleTween","text_textConstant","text_textFunction","transition_text","transition_transition","id0","id1","newId","transition_id","src_transition_transition","selection_prototype","linear_linear","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","poly_exponent","polyIn","custom","exponent","polyOut","polyInOut","pi","halfPi","sinIn","sinOut","sinInOut","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounce_b1","b2","b3","b4","b5","b6","b7","b8","b9","bounce_b0","bounceIn","bounceOut","bounceInOut","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","asin","elasticOut","elasticInOut","defaultTiming","transition_inherit","selection_transition","active_root","src_active","d3_brush_src_constant","src_event","noevent_nopropagation","src_noevent","MODE_DRAG","MODE_SPACE","MODE_HANDLE","MODE_CENTER","brush_X","handles","brush_type","output","xy","brush_Y","XY","cursors","overlay","w","nw","ne","se","sw","flipX","flipY","signsX","signsY","brush_defaultFilter","defaultExtent","width","height","brush_local","__brush","brush_empty","extent","brushSelection","dim","brushX","brush_brush","brushY","src_brush","brush","handleSize","initialize","handle","redraw","started","move","emitter","emit","selection0","selection1","Emitter","starting","metaKey","altKey","signX","signY","W","N","E","e0","e1","s0","s1","moving","shifting","shiftKey","lockX","lockY","point0","moved","ended","keydowned","keyupped","point1","keyCode","math_pi","math_halfPi","math_tau","math_max","compareValue","src_chord","padAngle","sortGroups","sortSubgroups","sortChords","chord","groupSums","groupIndex","subgroupIndex","chords","forEach","di","dj","a0","a1","subindex","startAngle","endAngle","src_array_slice","d3_chord_src_constant","path_pi","path_tau","path_epsilon","tauEpsilon","Path","_x0","_y0","_x1","_y1","path_path","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","ccw","cw","da","src_path","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","defaultEndAngle","src_ribbon","ribbon","buffer","argv","sr","sa0","sa1","sx0","sy0","tr","ta0","ta1","map_prefix","Map","map_map","has","clear","src_map","src_nest","sortKeys","sortValues","nest","depth","createResult","setResult","valuesByKey","sortKey","createObject","setObject","createMap","setMap","Set","proto","set_set","src_set","src_keys","src_values","src_entries","src_array_array","d3_contour_src_array_slice","src_ascending","src_area","ring","area","d3_contour_src_constant","hole","ringContains","yi","pj","yj","segmentContains","collinear","within","src_noop","cases","src_contours","smooth","smoothLinear","contours","contour","polygons","holes","isorings","polygon","coordinates","fragmentByStart","fragmentByEnd","stitch","startIndex","endIndex","unshift","xt","yt","_0","_1","blurX","blurY","defaultX","defaultY","defaultWeight","src_density","weight","density","Float32Array","wi","geometry","transformPolygon","transformRing","transformPoint","resize","cellSize","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","JSON","customConverter","inferColumns","rows","columnSet","column","dsv","delimiter","reFormat","DELIMITER","convert","parseRows","eof","eol","formatValue","formatRows","formatRow","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","responseBlob","response","ok","status","statusText","blob","init","fetch","then","responseArrayBuffer","arrayBuffer","src_buffer","responseText","src_text","dsvParse","dsv_dsv","dsv_csv","dsv_tsv","src_image","Promise","resolve","reject","image","Image","onerror","onload","src","responseJson","json","parser","DOMParser","parseFromString","xml_html","src_center","force","sx","sy","d3_force_src_constant","jiggle","_x","_y","add_add","cover","tree","_root","leaf","xm","ym","xp","yp","bottom","addAll","yz","src_cover","src_data","visit","d3_quadtree_src_extent","src_quad","find","x3","y3","quads","src_remove","retainer","removeAll","src_root","src_size","visitAfter","x_defaultX","src_x","y_defaultY","src_y","quadtree","Quadtree","leaf_copy","treeProto","collide_x","vx","collide_y","vy","collide","radii","strength","iterations","ri","ri2","prepare","quad","rj","link_index","link_find","nodeById","nodeId","src_link","links","defaultStrength","strengths","distance","distances","bias","link","alpha","initializeStrength","initializeDistance","simulation_x","simulation_y","initialRadius","initialAngle","src_simulation","simulation","alphaMin","alphaDecay","alphaTarget","velocityDecay","forces","stepper","fx","fy","initializeNodes","angle","initializeForce","closest","manyBody","distanceMin2","distanceMax2","theta2","accumulate","distanceMin","distanceMax","theta","radial","radiuses","d3_force_src_x","d3_force_src_y","formatDecimal","toExponential","coefficient","src_exponent","formatGroup","grouping","thousands","substring","formatNumerals","numerals","re","formatSpecifier","specifier","FormatSpecifier","fill","align","sign","symbol","zero","comma","precision","formatTrim","out","prefixExponent","formatPrefixAuto","formatRounded","formatTypes","%","toFixed","toPrecision","X","d3_format_src_identity","prefixes","src_locale","locale","currency","decimal","percent","newFormat","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","padding","formatPrefix","defaultLocale_locale","defaultLocale_format","defaultLocale_formatPrefix","defaultLocale","precisionFixed","precisionPrefix","precisionRound","adder","Adder","reset","adder_add","temp","bv","av","math_epsilon","math_epsilon2","src_math_pi","src_math_halfPi","quarterPi","src_math_tau","math_degrees","radians","math_cos","math_sin","math_sign","haversin","noop_noop","streamGeometry","stream","streamGeometryType","streamObjectType","Feature","FeatureCollection","features","Sphere","sphere","Point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","src_stream","areaRingSum","areaSum","area_lambda00","phi00","area_lambda0","area_cosPhi0","area_sinPhi0","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","d3_geo_src_area","cartesian_spherical","cartesian","cartesian_cartesian","spherical","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","bounds_lambda0","bounds_phi0","bounds_lambda1","bounds_phi1","bounds_lambda2","bounds_lambda00","bounds_phi00","bounds_p0","deltaSum","ranges","bounds_range","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","bounds_linePoint","normal","equatorial","inflection","lambdai","phii","antimeridian","bounds_angle","lambda0","lambda1","rangeCompare","rangeContains","bounds","feature","deltaMax","W0","W1","centroid_X0","centroid_Y0","Z0","centroid_X1","centroid_Y1","Z1","X2","Y2","Z2","centroid_lambda00","centroid_phi00","centroid_x0","centroid_y0","z0","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cx","cy","cz","src_centroid","d3_geo_src_constant","compose","invert","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","src_rotation","forward","circleStream","direction","cosRadius","sinRadius","circleRadius","src_circle","center","circle","clip_buffer","lines","rejoin","pointEqual","Intersection","other","entry","segments","compareIntersection","startInside","clip","segment","rejoin_link","isSubject","polygonContains_sum","polygonContains","winding","phi0","sinPhi0","cosPhi0","sinPhi1","cosPhi1","phi1","absDelta","intersection","phiArc","src_clip","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","clip_compareIntersection","pointLine","clean","ringSegments","validSegment","clip_antimeridian","clipAntimeridianLine","clipAntimeridianInterpolate","sign0","sign1","clipAntimeridianIntersect","sinLambda0Lambda1","from","to","clip_circle","cr","smallRadius","notHemisphere","visible","c0","v00","point2","code","intersect","two","pa","pb","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","B","uu","polar","meridian","q1","clip_line","ax","ay","bx","by","clipMax","clipMin","clipRectangle","corner","comparePoint","ca","cb","activeStream","bufferStream","x__","y__","v__","x_","y_","v_","first","clipStream","polygonInside","cleanInside","linePoint","clip_extent","cache","cacheStream","lengthSum","length_lambda0","length_sinPhi0","length_cosPhi0","lengthStream","lengthLineStart","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","sinDelta","src_length","distance_coordinates","distance_object","src_distance","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","ab","ao","ob","ringRadians","pointRadians","src_contains","graticuleX","graticuleY","graticule_graticule","X1","X0","Y1","Y0","DX","DY","Y","graticule","outline","extentMinor","extentMajor","stepMinor","stepMajor","graticule10","src_interpolate","cy0","cy1","sy1","kx0","ky0","kx1","ky1","d3_geo_src_identity","area_areaSum","area_areaRingSum","area_x00","area_y00","area_x0","area_y0","area_areaStream","area_areaRingStart","area_areaRingEnd","area_areaPointFirst","area_areaPoint","path_area","bounds_x0","bounds_y0","bounds_x1","bounds_y1","bounds_boundsStream","bounds_boundsPoint","path_bounds","path_centroid_X0","path_centroid_Y0","centroid_Z0","path_centroid_X1","path_centroid_Y1","centroid_Z1","centroid_X2","centroid_Y2","centroid_Z2","centroid_x00","centroid_y00","path_centroid_x0","path_centroid_y0","centroid_centroidStream","centroid_centroidPoint","centroid_centroidLineStart","centroid_centroidLineEnd","centroid_centroidRingStart","centroid_centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","path_centroid","PathContext","_context","_radius","pointRadius","_line","_point","measure_lengthSum","lengthRing","measure_x00","measure_y00","measure_x0","measure_y0","measure_lengthStream","measure_lengthPointFirst","measure_lengthPoint","measure","PathString","_string","_circle","string_circle","d3_geo_src_path","projection","projectionStream","contextStream","src_transform","methods","transformer","TransformStream","fit","fitBounds","clipExtent","fitExtent","fitSize","fitWidth","fitHeight","maxDepth","cosMinDistance","resample","project","delta2","resample_resample","resampleNone","resampleLineTo","phi2","lambda2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","transformRadians","transformRotate","scaleTranslate","scaleTranslateRotate","cosAlpha","sinAlpha","ai","ci","fi","projection_projection","projectionMutator","projectAt","preclip","postclip","projectResample","projectTransform","projectRotateTransform","clipAngle","recenter","conicProjection","parallels","cylindricalEqualAreaRaw","conicEqualAreaRaw","r0y","conicEqualArea","albers","multiplex","streams","projection_albersUsa","lower48","lower48Point","alaska","alaskaPoint","hawaii","hawaiiPoint","pointStream","albersUsa","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercatorRaw","mercator","mercatorProjection","reclip","tany","conicConformalRaw","conicConformal","equirectangularRaw","equirectangular","conicEquidistantRaw","gy","nx","conicEquidistant","A1","A2","A3","A4","M","equalEarth_iterations","equalEarthRaw","l2","l6","fpy","equalEarth","gnomonicRaw","gnomonic","identity_scaleTranslate","kx","ky","tx","ty","projection_identity","reflectX","reflectY","naturalEarth1Raw","phi4","naturalEarth1","orthographicRaw","orthographic","stereographicRaw","stereographic","transverseMercatorRaw","transverseMercator","defaultSeparation","meanX","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","cluster","separation","nodeSize","previousNode","eachAfter","count_count","hierarchy_count","hierarchy_each","eachBefore","hierarchy_sum","hierarchy_sort","hierarchy_path","ancestor","leastCommonAncestor","aNodes","ancestors","bNodes","descendants","leaves","hierarchy_links","hierarchy","Node","valued","childs","defaultChildren","computeHeight","node_copy","copyData","d3_hierarchy_src_array_slice","array_shuffle","enclose","circles","enclosesWeak","encloseBasis","extendBasis","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","encloseBasis1","r2","r21","r3","a2","a3","c3","d3","place","intersects","score","siblings_Node","packEnclose","aa","sj","sk","pack","siblings","optional","required","constantZero","d3_hierarchy_src_constant","pack_defaultRadius","src_pack","radiusLeaf","packChildren","translateChild","treemap_round","dice","src_partition","partition","positionNode","stratify_keyPrefix","preroot","ambiguous","defaultId","defaultParentId","parentId","src_stratify","stratify","nodeKey","nodeByKey","tree_defaultSeparation","nextLeft","nextRight","moveSubtree","wm","wp","change","executeShifts","nextAncestor","vim","TreeNode","treeRoot","src_tree","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","treemap_slice","squarify_phi","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","squarify","src_treemap","tile","paddingStack","paddingInner","paddingTop","paddingRight","paddingBottom","paddingLeft","treemap","paddingOuter","binary","sums","valueOffset","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","treemap_resquarify","resquarify","_squarify","d3_polygon_src_area","d3_polygon_src_centroid","src_cross","lexicographicOrder","computeUpperHullIndexes","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","d3_polygon_src_contains","inside","d3_polygon_src_length","perimeter","src_defaultSource","uniform","sourceRandomUniform","randomUniform","src_normal","sourceRandomNormal","randomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","src_exponential","sourceRandomExponential","randomExponential","d3_scale_src_array_array","array_map","d3_scale_src_array_slice","implicit","ordinal","unknown","band","ordinalRange","rescale","rangeRound","pointish","band_point","d3_scale_src_constant","d3_scale_src_number","unit","deinterpolateLinear","deinterpolateClamp","deinterpolate","reinterpolateClamp","reinterpolate","bimap","d0","polymap","clamp","continuous","piecewise","src_tickFormat","linearish","nice","src_linear_linear","identity_identity","interval","log_deinterpolate","log_reinterpolate","pow10","powp","base","logp","log10","log2","reflect","log_log","logs","pows","pow_raise","pow_pow","pow_sqrt","quantile_quantile","invertExtent","quantiles","quantize_quantize","threshold_threshold","interval_t0","interval_t1","newInterval","floori","offseti","field","date","millisecond_millisecond","src_millisecond","milliseconds","durationSecond","durationMinute","durationHour","durationDay","durationWeek","second_second","getUTCSeconds","src_second","seconds","minute_minute","getMinutes","src_minute","minutes","hour_hour","getTimezoneOffset","getHours","src_hour","hours","day_day","setHours","setDate","getDate","src_day","days","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month_month","setMonth","getMonth","getFullYear","src_month","months","year_year","setFullYear","src_year","years","utcMinute","setUTCSeconds","getUTCMinutes","src_utcMinute","utcMinutes","utcHour","setUTCMinutes","getUTCHours","src_utcHour","utcHours","utcDay","setUTCHours","setUTCDate","getUTCDate","src_utcDay","utcDays","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","src_utcMonth","utcMonths","utcYear","setUTCFullYear","src_utcYear","utcYears","localDate","H","L","utcDate","UTC","newYear","formatLocale","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_weekdays","locale_shortWeekdays","shortDays","locale_months","locale_shortMonths","shortMonths","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatDayOfMonth","formatMicroseconds","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatPeriod","Q","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","U","formatWeekNumberSunday","V","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","locale_formatYear","formatFullYear","Z","formatZone","formatLiteralPercent","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCPeriod","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parsePeriod","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseLocaleDate","parseLocaleTime","parseYear","parseFullYear","parseZone","parseLiteralPercent","pad","pads","charAt","newParse","newDate","parseSpecifier","week","day","utcFormat","utcParse","-","0","numberRe","percentRe","requoteRe","requote","getMilliseconds","getSeconds","getUTCMilliseconds","dow","src_defaultLocale_locale","timeFormat","timeParse","defaultLocale_defaultLocale","isoSpecifier","formatIsoNative","toISOString","formatIso","isoFormat","parseIsoNative","parseIso","isoParse","time_durationSecond","time_durationMinute","time_durationHour","time_durationDay","time_durationWeek","durationMonth","durationYear","time_date","time_number","calendar","year","month","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatYear","tickIntervals","tickInterval","src_time","utcTime","sequential","k10","diverging","k21","src_colors","category10","Accent","Dark2","Paired","Pastel1","Pastel2","Set1","Set2","Set3","ramp","scheme","BrBG_scheme","BrBG","PRGn_scheme","PRGn","PiYG_scheme","PiYG","PuOr_scheme","PuOr","RdBu_scheme","RdBu","RdGy_scheme","RdGy","RdYlBu_scheme","RdYlBu","RdYlGn_scheme","RdYlGn","Spectral_scheme","Spectral","BuGn_scheme","BuGn","BuPu_scheme","BuPu","GnBu_scheme","GnBu","OrRd_scheme","OrRd","PuBuGn_scheme","PuBuGn","PuBu_scheme","PuBu","PuRd_scheme","PuRd","RdPu_scheme","RdPu","YlGnBu_scheme","YlGnBu","YlGn_scheme","YlGn","YlOrBr_scheme","YlOrBr","YlOrRd_scheme","YlOrRd","Blues_scheme","Blues","Greens_scheme","Greens","Greys_scheme","Greys","Purples_scheme","Purples","Reds_scheme","Reds","Oranges_scheme","Oranges","sequential_multi_cubehelix","warm","cool","rainbow_c","rainbow","ts","sinebow_c","pi_1_3","pi_2_3","sinebow","viridis_ramp","viridis","magma","inferno","plasma","d3_shape_src_constant","math_abs","math_atan2","src_math_cos","src_math_max","math_min","src_math_sin","math_sqrt","src_math_epsilon","d3_shape_src_math_pi","d3_shape_src_math_halfPi","d3_shape_src_math_tau","math_acos","math_asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","arc_intersect","x10","y10","x32","y32","cornerTangents","rc","ox","oy","x11","y11","D","cx0","cx1","dx0","dy0","dx1","dy1","src_arc","cornerRadius","padRadius","a01","a11","a10","da0","da1","ap","rp","rc0","rc1","oc","kc","lc","Linear","areaStart","areaEnd","curve_linear","point_x","point_y","src_line","defined","curve","defined0","d3_shape_src_area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","src_pie","pie","arcs","curveRadialLinear","curveRadial","Radial","_curve","lineRadial","src_lineRadial","areaRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","pointRadial","d3_shape_src_array_slice","linkSource","linkTarget","link_link","curveHorizontal","curveVertical","link_curveRadial","p2","p3","linkHorizontal","linkVertical","linkRadial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","ka","kr","star_kx","star_ky","star","square","sqrt3","triangle","wye_c","wye_s","wye_k","wye_a","wye","symbol_symbols","src_symbol","d3_shape_src_noop","basis_point","Basis","curve_basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","curve_basisClosed","BasisOpen","basisOpen","Bundle","_basis","_beta","curve_bundle","bundle","cardinal_point","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","cardinalClosed","CardinalOpen","cardinalOpen","catmullRom_point","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","catmullRomClosed","CatmullRomOpen","catmullRomOpen","LinearClosed","linearClosed","monotone_sign","slope3","h0","h1","slope2","monotone_point","MonotoneX","_t0","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","px","controlPoints","py","natural","Step","_t","curve_step","stepBefore","stepAfter","offset_none","series","order_none","stackValue","src_stack","stack","kz","sz","oz","ki","si","sij","expand","offset_diverging","yn","silhouette","wiggle","s2","sij0","sij1","s3","skj0","skj1","order_ascending","ascending_sum","order_descending","insideOut","tops","bottoms","order_reverse","d3_voronoi_src_constant","src_point_x","src_point_y","RedBlackTree","RedBlackNode","R","P","after","grandpa","uncle","RedBlackFirst","RedBlackRotateLeft","RedBlackRotateRight","sibling","src_RedBlackTree","createEdge","edge","Diagram_edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","connectEdge","lx","ly","rx","ry","fm","fb","clipEdges","Diagram_epsilon","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","nCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","dc","v01","v11","v10","circlePool","firstCircle","Circle","attachCircle","lArc","rArc","lSite","cSite","rSite","Diagram_epsilon2","ha","hc","Diagram_circles","detachCircle","beachPool","Beach","createBeach","beach","detachBeach","beaches","removeBeach","disappearing","nArcs","iArc","addBeach","directrix","dxl","dxr","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","edges","triangles","_found","src_voronoi","voronoi","d3_zoom_src_constant","ZoomEvent","Transform","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","transform_identity","transform_transform","__zoom","src_noevent_nopropagation","d3_zoom_src_noevent","zoom_defaultFilter","zoom_defaultExtent","SVGElement","clientWidth","clientHeight","defaultTransform","defaultWheelDelta","deltaY","deltaMode","zoom_defaultTouchable","defaultConstrain","translateExtent","d3_zoom_src_zoom","constrain","wheelDelta","scaleExtent","touchstarting","touchDelay","wheelDelay","zoom","wheeled","dblclicked","collection","scaleBy","scaleTo","k0","k1","translateBy","translateTo","Gesture","touch0","touch1","wheel","wheelidled","l0","l1","dp","dl","qs","search","containerId","containerWidth","getElementById","offsetWidth","containerHeight","offsetHeight","margin","helperWidth","realTrendRatio","realTrendData","userTrendData","parseTime","close","allSymbols","symbols","isEnabled","sel","drawRect","dragstarted","dragended","sqm","nearestPointX","currentDistanceY","msg"],"mappings":"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","file":"index.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, index) => {\n\t\t\t\treturn value === null ? [\n\t\t\t\t\tencode(key, options),\n\t\t\t\t\t'[',\n\t\t\t\t\tindex,\n\t\t\t\t\t']'\n\t\t\t\t].join('') : [\n\t\t\t\t\tencode(key, options),\n\t\t\t\t\t'[',\n\t\t\t\t\tencode(index, options),\n\t\t\t\t\t']=',\n\t\t\t\t\tencode(value, options)\n\t\t\t\t].join('');\n\t\t\t};\n\t\tcase 'bracket':\n\t\t\treturn (key, value) => {\n\t\t\t\treturn value === null ? [encode(key, options), '[]'].join('') : [\n\t\t\t\t\tencode(key, options),\n\t\t\t\t\t'[]=',\n\t\t\t\t\tencode(value, options)\n\t\t\t\t].join('');\n\t\t\t};\n\t\tdefault:\n\t\t\treturn (key, value) => {\n\t\t\t\treturn value === null ? encode(key, options) : [\n\t\t\t\t\tencode(key, options),\n\t\t\t\t\t'=',\n\t\t\t\t\tencode(value, options)\n\t\t\t\t].join('');\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction extract(input) {\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parse(input, options) {\n\toptions = Object.assign({decode: true, arrayFormat: 'none'}, options);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof input !== 'string') {\n\t\treturn ret;\n\t}\n\n\tinput = input.trim().replace(/^[?#&]/, '');\n\n\tif (!input) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of input.split('&')) {\n\t\tlet [key, value] = param.replace(/\\+/g, ' ').split('=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : decode(value, options);\n\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\treturn Object.keys(ret).sort().reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (obj, options) => {\n\tif (!obj) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t}, options);\n\n\tconst formatter = encoderForArrayFormat(options);\n\tconst keys = Object.keys(obj);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = obj[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tconst result = [];\n\n\t\t\tfor (const value2 of value.slice()) {\n\t\t\t\tif (value2 === undefined) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tresult.push(formatter(key, value2, result.length));\n\t\t\t}\n\n\t\t\treturn result.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (input, options) => {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn {\n\t\turl: input.split('?')[0] || '',\n\t\tquery: parse(extract(input), options)\n\t};\n};\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","export var name = \"d3\";\nexport var version = \"5.7.0\";\nexport var description = \"Data-Driven Documents\";\nexport var keywords = [\"dom\",\"visualization\",\"svg\",\"animation\",\"canvas\"];\nexport var homepage = \"https://d3js.org\";\nexport var license = \"BSD-3-Clause\";\nexport var author = {\"name\":\"Mike Bostock\",\"url\":\"https://bost.ocks.org/mike\"};\nexport var main = \"dist/d3.node.js\";\nexport var unpkg = \"dist/d3.min.js\";\nexport var jsdelivr = \"dist/d3.min.js\";\nexport var module = \"index.js\";\nexport var repository = {\"type\":\"git\",\"url\":\"https://github.com/d3/d3.git\"};\nexport var scripts = {\"pretest\":\"rimraf dist && mkdir dist && json2module package.json > dist/package.js && node rollup.node\",\"test\":\"tape 'test/**/*-test.js'\",\"prepublishOnly\":\"yarn test && rollup -c\",\"postpublish\":\"git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m \\\"d3 ${npm_package_version}\\\" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m \\\"${npm_package_version}\\\" && git tag -am \\\"${npm_package_version}\\\" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js\"};\nexport var devDependencies = {\"json2module\":\"0.0\",\"rimraf\":\"2\",\"rollup\":\"0.64\",\"rollup-plugin-ascii\":\"0.0\",\"rollup-plugin-node-resolve\":\"3\",\"rollup-plugin-terser\":\"1\",\"tape\":\"4\"};\nexport var dependencies = {\"d3-array\":\"1\",\"d3-axis\":\"1\",\"d3-brush\":\"1\",\"d3-chord\":\"1\",\"d3-collection\":\"1\",\"d3-color\":\"1\",\"d3-contour\":\"1\",\"d3-dispatch\":\"1\",\"d3-drag\":\"1\",\"d3-dsv\":\"1\",\"d3-ease\":\"1\",\"d3-fetch\":\"1\",\"d3-force\":\"1\",\"d3-format\":\"1\",\"d3-geo\":\"1\",\"d3-hierarchy\":\"1\",\"d3-interpolate\":\"1\",\"d3-path\":\"1\",\"d3-polygon\":\"1\",\"d3-quadtree\":\"1\",\"d3-random\":\"1\",\"d3-scale\":\"2\",\"d3-scale-chromatic\":\"1\",\"d3-selection\":\"1\",\"d3-shape\":\"1\",\"d3-time\":\"1\",\"d3-time-format\":\"2\",\"d3-timer\":\"1\",\"d3-transition\":\"1\",\"d3-voronoi\":\"1\",\"d3-zoom\":\"1\"};\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","export default function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nexport function pair(a, b) {\n  return [a, b];\n}\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n","import variance from \"./variance\";\n\nexport default function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return x;\n}\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import {slice} from \"./array\";\nimport bisect from \"./bisect\";\nimport constant from \"./constant\";\nimport extent from \"./extent\";\nimport identity from \"./identity\";\nimport range from \"./range\";\nimport {tickStep} from \"./ticks\";\nimport sturges from \"./threshold/sturges\";\n\nexport default function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","import {map} from \"../array\";\nimport ascending from \"../ascending\";\nimport number from \"../number\";\nimport quantile from \"../quantile\";\n\nexport default function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n","import deviation from \"../deviation\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n","import ascending from \"./ascending\";\nimport number from \"./number\";\nimport quantile from \"./quantile\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}\n","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n","export default function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n","import ascending from \"./ascending\";\n\nexport default function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n","export default function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n","import min from \"./min\";\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n","import transpose from \"./transpose\";\n\nexport default function() {\n  return transpose(arguments);\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"currentColor\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"currentColor\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"currentColor\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? (tickSizeOuter ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter : \"M0.5,\" + range0 + \"V\" + range1)\n            : (tickSizeOuter ? \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter : \"M\" + range0 + \",0.5H\" + range1));\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","import creator from \"./creator\";\nimport select from \"./select\";\n\nexport default function(name) {\n  return select(creator(name).call(document.documentElement));\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n","import {hue} from \"./color\";\n\nexport default function(a, b) {\n  var i = hue(+a, +b);\n  return function(t) {\n    var x = i(t);\n    return x - 360 * Math.floor(x / 360);\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {lab as colorLab} from \"d3-color\";\nimport color from \"./color\";\n\nexport default function lab(start, end) {\n  var l = color((start = colorLab(start)).l, (end = colorLab(end)).l),\n      a = color(start.a, end.a),\n      b = color(start.b, end.b),\n      opacity = color(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {Timer, now} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","export function linear(t) {\n  return +t;\n}\n","export function quadIn(t) {\n  return t * t;\n}\n\nexport function quadOut(t) {\n  return t * (2 - t);\n}\n\nexport function quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","export function expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nexport function expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nexport function expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import {Transition} from \"./transition/index\";\nimport {SCHEDULED} from \"./transition/schedule\";\n\nvar root = [null];\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {customEvent, event, mouse, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport BrushEvent from \"./event\";\nimport noevent, {nopropagation} from \"./noevent\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (event.touches) { if (event.changedTouches.length < event.touches.length) return noevent(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(event.view);\n    }\n\n    nopropagation();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n","export var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;\n","import {range} from \"d3-array\";\nimport {max, tau} from \"./math\";\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nexport default function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport {cos, halfPi, sin} from \"./math\";\nimport {path} from \"d3-path\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nexport default function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","export default function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n","export default function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n","export default function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\n","export default function(a, b) {\n  return a - b;\n}\n","export default function(ring) {\n  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n","export default function() {}\n","import {extent, thresholdSturges, tickStep, range} from \"d3-array\";\nimport {slice} from \"./array\";\nimport ascending from \"./ascending\";\nimport area from \"./area\";\nimport constant from \"./constant\";\nimport contains from \"./contains\";\nimport noop from \"./noop\";\n\nvar cases = [\n  [],\n  [[[1.0, 1.5], [0.5, 1.0]]],\n  [[[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [0.5, 1.0]]],\n  [[[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 0.5], [1.0, 1.5]]],\n  [[[1.0, 0.5], [0.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 0.5]]],\n  [[[1.0, 1.5], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.5, 1.0]]],\n  [[[1.0, 1.5], [1.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 1.5]]],\n  []\n];\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      threshold = thresholdSturges,\n      smooth = smoothLinear;\n\n  function contours(values) {\n    var tz = threshold(values);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var domain = extent(values), start = domain[0], stop = domain[1];\n      tz = tickStep(start, stop, tz);\n      tz = range(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);\n    } else {\n      tz = tz.slice().sort(ascending);\n    }\n\n    return tz.map(function(value) {\n      return contour(values, value);\n    });\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n\n    isorings(values, value, function(ring) {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array,\n        fragmentByEnd = new Array,\n        x, y, t0, t1, t2, t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f, g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function(point) {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 > 0) || !(_1 > 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\n  };\n\n  contours.smooth = function(_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n","// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nexport function blurX(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var j = 0; j < m; ++j) {\n    for (var i = 0, sr = 0; i < n + r; ++i) {\n      if (i < n) {\n        sr += source.data[i + j * n];\n      }\n      if (i >= r) {\n        if (i >= w) {\n          sr -= source.data[i - w + j * n];\n        }\n        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\n      }\n    }\n  }\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nexport function blurY(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var i = 0; i < n; ++i) {\n    for (var j = 0, sr = 0; j < m + r; ++j) {\n      if (j < m) {\n        sr += source.data[i + j * n];\n      }\n      if (j >= r) {\n        if (j >= w) {\n          sr -= source.data[i + (j - w) * n];\n        }\n        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\n      }\n    }\n  }\n}\n","import {max, range, tickStep} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {blurX, blurY} from \"./blur\";\nimport constant from \"./constant\";\nimport contours from \"./contours\";\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction defaultWeight() {\n  return 1;\n}\n\nexport default function() {\n  var x = defaultX,\n      y = defaultY,\n      weight = defaultWeight,\n      dx = 960,\n      dy = 500,\n      r = 20, // blur radius\n      k = 2, // log2(grid cell size)\n      o = r * 3, // grid offset, to pad for blur\n      n = (dx + o * 2) >> k, // grid width\n      m = (dy + o * 2) >> k, // grid height\n      threshold = constant(20);\n\n  function density(data) {\n    var values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n\n    data.forEach(function(d, i, data) {\n      var xi = (+x(d, i, data) + o) >> k,\n          yi = (+y(d, i, data) + o) >> k,\n          wi = +weight(d, i, data);\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        values0[xi + yi * n] += wi;\n      }\n    });\n\n    // TODO Optimize.\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n\n    var tz = threshold(values0);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var stop = max(values0);\n      tz = tickStep(0, stop, tz);\n      tz = range(0, Math.floor(stop / tz) * tz, tz);\n      tz.shift();\n    }\n\n    return contours()\n        .thresholds(tz)\n        .size([n, m])\n      (values0)\n        .map(transform);\n  }\n\n  function transform(geometry) {\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  }\n\n  // TODO Optimize.\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = (dx + o * 2) >> k;\n    m = (dy + o * 2) >> k;\n    return density;\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\n  };\n\n  density.weight = function(_) {\n    return arguments.length ? (weight = typeof _ === \"function\" ? _ : constant(+_), density) : weight;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n  };\n\n  return density;\n}\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","function responseBlob(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.blob();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseBlob);\n}\n","function responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}\n","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n","import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n","export default function(input, init) {\n  return new Promise(function(resolve, reject) {\n    var image = new Image;\n    for (var key in init) image[key] = init[key];\n    image.onerror = reject;\n    image.onload = function() { resolve(image); };\n    image.src = input;\n  });\n}\n","function responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.json();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n","import text from \"./text\";\n\nfunction parser(type) {\n  return function(input, init)  {\n    return text(input, init).then(function(text) {\n      return (new DOMParser).parseFromString(text, type);\n    });\n  };\n}\n\nexport default parser(\"application/xml\");\n\nexport var html = parser(\"text/html\");\n\nexport var svg = parser(\"image/svg+xml\");\n","export default function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function() {\n  return (Math.random() - 0.5) * 1e-6;\n}\n","export default function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","import Quad from \"./quad\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add\";\nimport tree_cover from \"./cover\";\nimport tree_data from \"./data\";\nimport tree_extent from \"./extent\";\nimport tree_find from \"./find\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove\";\nimport tree_root from \"./root\";\nimport tree_size from \"./size\";\nimport tree_visit from \"./visit\";\nimport tree_visitAfter from \"./visitAfter\";\nimport tree_x, {defaultX} from \"./x\";\nimport tree_y, {defaultY} from \"./y\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {quadtree} from \"d3-quadtree\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {map} from \"d3-collection\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {map} from \"d3-collection\";\nimport {timer} from \"d3-timer\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {quadtree} from \"d3-quadtree\";\nimport {x, y} from \"./simulation\";\n\nexport default function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import adder from \"./adder\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import adder from \"./adder\";\nimport {areaStream, areaRingSum} from \"./area\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport {abs, degrees, epsilon, radians} from \"./math\";\nimport stream from \"./stream\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import {asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose\";\nimport {asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport constant from \"./constant\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math\";\nimport {rotateRadians} from \"./rotation\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import noop from \"../noop\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import adder from \"./adder\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian\";\nimport {asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sin, tau} from \"./math\";\n\nvar sum = adder();\n\nexport default function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n","import clipBuffer from \"./buffer\";\nimport clipRejoin from \"./rejoin\";\nimport {epsilon, halfPi} from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian\";\nimport {circleStream} from \"../circle\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import {abs, epsilon} from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipRejoin from \"./rejoin\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","import clipRectangle from \"./rectangle\";\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n","import adder from \"./adder\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import length from \"./length\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","import {default as polygonContains} from \"./polygonContains\";\nimport {default as distance} from \"./distance\";\nimport {epsilon, radians} from \"./math\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","export default function(x) {\n  return x;\n}\n","import adder from \"../adder\";\nimport {abs} from \"../math\";\nimport noop from \"../noop\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import noop from \"../noop\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {sqrt} from \"../math\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math\";\nimport noop from \"../noop\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import adder from \"../adder\";\nimport {sqrt} from \"../math\";\nimport noop from \"../noop\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {default as geoStream} from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math\";\nimport {transformer} from \"../transform\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport clipRectangle from \"../clip/rectangle\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math\";\nimport {rotateRadians} from \"../rotation\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\nimport resample from \"./resample\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {degrees, pi, radians} from \"../math\";\nimport {projectionMutator} from \"./index\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {asin, cos, sin} from \"../math\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import {abs, asin, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import conicEqualArea from \"./conicEqualArea\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","import {epsilon} from \"../math\";\nimport albers from \"./albers\";\nimport conicEqualArea from \"./conicEqualArea\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, sqrt} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import {abs, atan, atan2, cos, epsilon, halfPi, log, pow, sign, sin, sqrt, tan} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {mercatorRaw} from \"./mercator\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n","import projection from \"./index\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {abs, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {equirectangularRaw} from \"./equirectangular\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import clipRectangle from \"../clip/rectangle\";\nimport identity from \"../identity\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    },\n    fitWidth: function(width, object) {\n      return fitWidth(projection, width, object);\n    },\n    fitHeight: function(height, object) {\n      return fitHeight(projection, height, object);\n    }\n  };\n}\n","import projection from \"./index\";\nimport {abs, epsilon} from \"../math\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","import {asin, cos, epsilon, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","import {atan, exp, halfPi, log, tan} from \"../math\";\nimport {mercatorProjection} from \"./mercator\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n","function defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","export default function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","import node_count from \"./count\";\nimport node_each from \"./each\";\nimport node_eachBefore from \"./eachBefore\";\nimport node_eachAfter from \"./eachAfter\";\nimport node_sum from \"./sum\";\nimport node_sort from \"./sort\";\nimport node_path from \"./path\";\nimport node_ancestors from \"./ancestors\";\nimport node_descendants from \"./descendants\";\nimport node_leaves from \"./leaves\";\nimport node_links from \"./links\";\n\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n","export var slice = Array.prototype.slice;\n\nexport function shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","import {shuffle, slice} from \"../array\";\n\nexport default function(circles) {\n  var i = 0, n = (circles = shuffle(slice.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","import enclose from \"./enclose\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packEnclose(circles);\n  return circles;\n}\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {packEnclose} from \"./siblings\";\nimport {optional} from \"../accessors\";\nimport constant, {constantZero} from \"../constant\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","import roundNode from \"./treemap/round\";\nimport treemapDice from \"./treemap/dice\";\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n","import {required} from \"./accessors\";\nimport {Node, computeHeight} from \"./hierarchy/index\";\n\nvar keyPrefix = \"$\", // Protect against keys like “__proto__”.\n    preroot = {depth: -1},\n    ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nexport default function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n","import {Node} from \"./hierarchy/index\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","import roundNode from \"./round\";\nimport squarify from \"./squarify\";\nimport {required} from \"../accessors\";\nimport constant, {constantZero} from \"../constant\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n","import dice from \"./dice\";\nimport slice from \"./slice\";\n\nexport default function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\nimport {phi, squarifyRatio} from \"./squarify\";\n\nexport default (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}\n","// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nexport default function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n","import cross from \"./cross\";\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nexport default function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n","export default function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n}\n","export default function() {\n  return Math.random();\n}\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport normal from \"./normal\";\n\nexport default (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport irwinHall from \"./irwinHall\";\n\nexport default (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource);\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","import {calendar} from \"./time\";\nimport {utcFormat} from \"d3-time-format\";\nimport {utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond} from \"d3-time\";\n\nexport default function() {\n  return calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n}\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      k10 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) * k10;\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], k10 = x0 === x1 ? 0 : 1 / (x1 - x0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","import {linearish} from \"./linear\";\n\nexport default function diverging(interpolator) {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      k10 = 1,\n      k21 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = 0.5 + ((x = +x) - x1) * (x < x1 ? k10 : k21);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], x2 = +_[2], k10 = x0 === x1 ? 0 : 0.5 / (x1 - x0), k21 = x1 === x2 ? 0 : 0.5 / (x2 - x1), scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return diverging(interpolator).domain([x0, x1, x2]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport area from \"./area\";\nimport {lineRadial} from \"./lineRadial\"\n\nexport default function() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n","export default function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n","export var slice = Array.prototype.slice;\n","import {path} from \"d3-path\";\nimport {slice} from \"../array\";\nimport constant from \"../constant\";\nimport {x as pointX, y as pointY} from \"../point\";\nimport pointRadial from \"../pointRadial\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","import none from \"./none\";\nimport {sum} from \"./ascending\";\n\nexport default function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = none(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  return none(series).reverse();\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  return node.__zoom || identity;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport ZoomEvent from \"./event\";\nimport {Transform, identity} from \"./transform\";\nimport noevent, {nopropagation} from \"./noevent\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta() {\n  return -event.deltaY * (event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent();\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}\n","import './index.scss'\nimport * as d3 from 'd3'\nimport * as qs from 'query-string'\n\nlet q = qs.parse(location.search),\n    containerId = 'chart-container',\n    containerWidth = document.getElementById(containerId).offsetWidth,\n    containerHeight = document.getElementById(containerId).offsetHeight,\n    svg = d3.select(`#${containerId}`).append(\"svg\").attr(\"width\", containerWidth).attr(\"height\", containerHeight),\n    margin = { top: 20, right: 20, bottom: 30, left: 100 },\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom,\n    helperWidth = width / 20,\n    realTrendRatio = +q.r > 0 ? Math.min(1, Math.abs(+q.r)) : 0.25,\n    realTrendData = [], userTrendData = [],\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nlet parseTime = d3.timeParse(\"%Y-%m-%d\");\n\nlet x = d3.scaleTime().rangeRound([0, width]),\n    y = d3.scaleLinear().rangeRound([height, 0]),\n    c = d3.scaleSequential(d3.interpolateRdYlGn).domain([1, 0]),\n    s = d3.scaleSqrt().domain([0, 0.5]).rangeRound([100, 0]).clamp(true);\n\nlet line = d3.line()\n    .x(function (d) { return x(d.date); })\n    .y(function (d) { return y(d.close); });\n\nlet spline = d3.line().curve(d3.curveLinear);\n\nd3\n    .json(\"https://api.iextrading.com/1.0/ref-data/symbols\")\n    .then(function (allSymbols) {\n\n        let symbols = allSymbols.filter(d => d.isEnabled),\n            symbol = symbols[Math.floor(d3.randomUniform(symbols.length-1)())];\n\n        d3.json(\n            `https://api.iextrading.com/1.0/stock/${symbol.symbol.toLowerCase()}/chart/5y?chartSimplify=1`\n        ).then(\n            function (data) {\n\n                data = data.map(function(d) { d.date = parseTime(d.date); return d; }).slice(10);\n\n                x.domain(d3.extent(data, function (d) { return d.date; }));\n                y.domain(d3.extent(data, function (d) { return d.close; }));\n\n                realTrendData = data.map(d => [x(d.date) + margin.left, y(d.close) + margin.top]);\n\n                g.append(\"path\")\n                    .datum(data.slice(0, Math.floor(data.length * realTrendRatio) + 1))\n                    .attr(\"class\", \"real-trend real-trend-first\")\n                    .attr(\"stroke\", \"steelblue\")\n                    .attr(\"d\", line);\n\n                g.append(\"path\")\n                    .datum(data.slice(Math.floor(data.length * realTrendRatio)))\n                    .attr(\"class\", \"real-trend real-trend-last\")\n                    .attr(\"stroke\", \"steelblue\")\n                    .attr(\"opacity\", 0)\n                    .attr(\"d\", line);\n\n                g.append(\"g\")\n                    .attr(\"class\", \"drag-helper\")\n                    .call(sel => { drawRect(sel, \"Begin to draw your trend from here...\") });\n\n                g.append(\"g\")\n                    .attr(\"class\", \"drag-helper\")\n                    .attr(\"transform\", `translate(${width - helperWidth},0)`)\n                    .call(sel => { drawRect(sel, \"... end to draw your trend here.\") });\n\n                g.append(\"g\")\n                    .attr(\"transform\", \"translate(0,\" + height + \")\")\n                    .call(d3.axisBottom(x))\n                    .append(\"text\")\n                    .attr(\"fill\", \"#000\")\n                    .attr(\"x\", width)\n                    .attr(\"dy\", \"-0.71em\")\n                    .attr(\"dx\", \"-0.71em\")\n                    .attr(\"text-anchor\", \"end\")\n                    .text(\"Time\");\n\n                g.append(\"g\")\n                    .call(d3.axisLeft(y))\n                    .append(\"text\")\n                    .attr(\"fill\", \"#000\")\n                    .attr(\"transform\", \"rotate(-90)\")\n                    .attr(\"y\", 6)\n                    .attr(\"dy\", \"0.71em\")\n                    .attr(\"dx\", \"-0.71em\")\n                    .attr(\"text-anchor\", \"end\")\n                    .text(\"Price ($)\");\n\n                svg.append(\"path\")\n                    .attr(\"class\", \"user-trend\")\n                    .attr(\"stroke\", \"black\");\n\n                svg.call(\n                    d3.drag()\n                        .container(function () { return this; })\n                        .subject(function () { var p = [d3.event.x, d3.event.y]; return [p, p]; })\n                        .on(\"start\", dragstarted)\n                        .on(\"end\", dragended)\n                );\n\n                function dragended() {\n\n                    if (d3.event.x < width + margin.left - helperWidth || !svg.select(\".user-trend\").attr(\"d\")) return;\n\n                    d3.select(\".real-trend-last\").attr(\"opacity\", 1);\n                    svg.attr(\"class\", null);\n                    d3.select('body').style(\"background-color\", null);\n\n                    let sqm = Math.sqrt(userTrendData\n                        .map(d => realTrendData[d3.bisector(d => d[0]).right(realTrendData, d[0])][1] - d[1])\n                        .reduce((m, n) => m + n ** 2, 0) / userTrendData.length) / height;\n\n                    d3.select(\"#score-container\").text(`You earned $${Math.floor(s(sqm))} from ${symbol.name}!`);\n                }\n\n                function dragstarted() {\n\n                    if (!realTrendRatio) {\n                        if (d3.event.x < margin.left || d3.event.x > margin.left + helperWidth) return;\n                    } else {\n                        if (d3.event.x < realTrendData[Math.max(0, Math.floor(data.length * realTrendRatio) - 10)][0] || d3.event.x > width + margin.left - helperWidth) return;\n                    }\n\n                    svg.select(\".real-trend-last\").attr(\"opacity\", 0);\n                    svg.select(\".user-trend\").attr(\"d\", null)\n                    d3.select(\"#score-container\").html(\"&nbsp;\");\n\n                    userTrendData = d3.event.subject;\n\n                    let active = svg.select(\".user-trend\").datum(userTrendData),\n                        x0 = d3.event.x,\n                        y0 = d3.event.y;\n\n                    d3.event.on(\"drag\", function () {\n\n                        if (d3.event.x > width + margin.left) return;\n                        if (d3.event.y > height + margin.top) return;\n                        if (d3.event.y < margin.top) return;\n\n                        var x1 = Math.floor(d3.event.x),\n                            y1 = Math.floor(d3.event.y),\n                            dx = x1 - x0,\n                            dy = y1 - y0;\n\n                        if (dx * dx + dy * dy > 100) {\n                            userTrendData.push([x0 = x1, y0 = y1]);\n                        } else {\n                            userTrendData[userTrendData.length - 1] = [x1, y1];\n                        }\n\n                        let nearestPointX = realTrendData[d3.bisector(d => d[0]).right(realTrendData, x1)],\n                            currentDistanceY = nearestPointX[1] - y1;\n                        svg.attr(\"class\", currentDistanceY < 0 ? 'up' : 'down');\n                        d3.select('body').style(\"background-color\", c(Math.abs(currentDistanceY / height)));\n\n                        active\n                            .datum(userTrendData = userTrendData.filter(d => d[0] <= x1))\n                            .attr(\"d\", spline);\n\n                    });\n\n                }\n\n                function drawRect(sel, msg) {\n\n                    sel.append(\"rect\")\n                        .attr(\"y\", 0)\n                        .attr(\"x\", 0)\n                        .attr(\"width\", helperWidth)\n                        .attr(\"height\", height);\n\n                    sel.append(\"text\")\n                        .attr(\"transform\", `rotate(-90)translate(${-height / 2},${helperWidth})`)\n                        .attr(\"dy\", \"-0.5em\")\n                        .attr(\"text-anchor\", \"middle\")\n                        .text(msg || \"\");\n\n                }\n\n            }\n        );\n\n    });\n"],"sourceRoot":""}